---
import type { Project } from "~/types"
import Link from "~/components/Link.astro"

interface Props {
	class?: string
	project: Project
}

const { class: className, project, ...props } = Astro.props

const { name, description, links, tags, imageUrl } = project
---

<article class:list={["project-card", className]} {...props}>
	<div class="info">
		<h3>{name}</h3>
		<p>{description}</p>

		<div class="tags">
			{tags.map((tag) => <span class="tag">{tag}</span>)}
		</div>

		<div class="links">
			{
				links.map((link) => (
					<Link showArrow href={link.url} target="_blank">
						{link.label}
					</Link>
				))
			}
		</div>
	</div>

	<picture class="picture">
		<img
			class="image"
			src={imageUrl}
			alt={`${name} vista previa`}
			width="685"
			height="360"
			loading="lazy"
			decoding="async"
		/>
	</picture>
</article>

<style>
	html[data-theme="light"] article {
		--background-color: hsl(0, 0%, 82%);
		--tag-color-hsl: 217 100% 22%;
	}

	html[data-theme="dark"] article {
		--background-color: hsl(0 0% 10%);
		--tag-color-hsl: 200 75% 65%;
	}

	article {
		display: flex;
		flex-direction: column;
		background-color: var(--background-color);
		border: 1px solid var(--stroke);
		border-radius: 12px;
		overflow: hidden;
		transition: background-color 300ms;
	}

	.info {
		padding: clamp(1.875rem, 1.42rem + 1.942vw, 3.75rem);
	}

	h3 {
		font-size: 2rem;
		padding-block-end: 8px;
	}

	.tags {
		display: flex;
		flex-wrap: wrap;
		gap: 4px 8px;
		padding-block: 20px;
	}

	.tag {
		color: hsl(var(--tag-color-hsl));
		background-color: hsl(var(--tag-color-hsl) / 0.2);
		padding: 4px 10px;
		border-radius: 30px;
		font-size: 0.875rem;
		font-weight: 500;
		transition: background-color 300ms;
	}

	.links {
		display: flex;
		column-gap: 14px;
	}

	.picture {
		margin-block-start: auto;
		transform: translate(clamp(1.875rem, 1.42rem + 1.942vw, 3.75rem));
	}

	img {
		block-size: auto;
	}
</style>
